[
["vmware-i-codelite.html", " 13 VMWare i CodeLite 13.1 Per què una màquina virtual? 13.2 VirtualBox i requeriments de virtualització 13.3 Com instal·lar les Guest Additions 13.4 Primers passos amb CodeLite 13.5 Com activar un projecte 13.6 Canviar idioma del teclat 13.7 Programa per defecte al crear un projecte 13.8 Com fixar el kernel d’inici amb Lubuntu", " 13 VMWare i CodeLite 13.1 Per què una màquina virtual? La màquina virtual s’utilitza per tenir un entorn homogeni de programació, tant per part dels estudiants com per part dels consultors, de forma que qualsevol enunciat/solució publicat a les aules de teoria funcioni a tots els estudiants, i que tots els programes que realitzeu es comportin igual als entorns que s’utilitzaran per corregir-los. Fa uns semestres ens vam trobar amb uns pocs casos en els quals un programa que funcionava correctament al PC d’un estudiant, fallava a l’hora de ser corregit. I també alguns enunciats que en determinats sistemes operatius / versions de compiladors C, tampoc funcionaven correctament. Per aquest motiu es va decidir utilitzar una màquina virtual. Nosaltres no tenim forma de controlar que realment utilitzeu la FP20181 o bé un CodeLite instal·lat directament al vostre PC, però si no és així es pot donar alguna situació poc desitjable com les que he comentat. 13.2 VirtualBox i requeriments de virtualització Per poder utilitzar VirtualBox és necessari que disposi d’accés a l’opció de virtualització. Si no és així, es poden obtenir errors del tipus: VT-X está deshabilitado en el BIOS para todos los CPUs. L’error es pot produir per vàries raons: La BIOS del PC té deshabilitada l’opció. Per solucionar-ho, cal entrar dins de la BIOS del PC i trobar l’opció d’activació de la virtualització (varia segons el fabricant): pot ser VT-x, Virtualization Technology, VT-x/AMD-V, Intel Virtual Technology, Tecnología de virtualización (VTx/VTd), etc. Tenim actiu un antivirus el qual té activada una virtualització pròpia que entra en conflicte amb la requerida per VirtualBox. En aquest cas, únicament cal desactivar l’opció de virtualització de l’antivirus. 13.3 Com instal·lar les Guest Additions Les Guest Additions són una sèrie de drivers que milloren la interacció entre host i màquina virtual. Per instal·lar-les únicament cal fer: Engegar la màquina virtual FP20181 Anar a la barra de menú superior -&gt; VirtualBox -&gt; Devices -&gt; Insert Guest Additions CD Image… -&gt; instal·larà una unitat de CD amb les Guest Additions. Obrir un terminal des de Lubuntu -&gt; System Tools -&gt; LXTerminal Dins del terminal LXTerminal executar el següent (la versió que s’estigui instal·lant pot ser més nova que la 6.0.12): cd /media/uoc/VBox_GAs_6.0.12/ sudo sh ./VBoxLinuxAdditions.run Reiniciar la FP20181 per activar les Guest Additions. 13.4 Primers passos amb CodeLite A les xWiki trobareu el mòdul Introducció a l’entorn de programació CodeLite, en el qual es detallen els passos a realitzar per preparar l’entorn. A continuació resumeixo una sèrie d’aspectes que es comenten a la xWiki i que són importants recordar: Un workspace de CodeLite és una agrupació de projectes. Únicament es pot tenir un workspace obert dins de CodeLite. Per crear un workspace: CodeLite -&gt; Workspace -&gt; New Workspace… -&gt; Workspace type: C++ -&gt; Workspace name: el que correspongui; Workspace Path: /home/uoc/Documents/codelite/workspaces/ (o qualsevol altre) -&gt; fi Com que no es pot tenir més d’un workspace obert, no en podreu crear cap de nou si prèviament no tanqueu el workspace actiu. Si dins del menú de CodeLite veieu la opció New Workspace en gris i que no es pot seleccionar, significa que ja teniu un workspace obert. Per tancar-lo: CodeLite -&gt; Workspace -&gt; Close Workspace. Per afegir un projecte a un workspace: CodeLite -&gt; File -&gt; New -&gt; New Project -&gt; de tipus Console: Simple executable (gcc) -&gt; Project name: el que correspongui -&gt; Compiler: GCC; Debugger: GNU gdb debugger -&gt; fi El projecte que acabem de crear conté un programa hello world de mostra, que si executem mostra el missatge “hello world” per pantalla. Aquest programa en C el podem editar i afegir/treure tot allò que volem. És aquí dins on hem de codificar els nostres programes en C (no els algorismes!). Si tenim més d’un projecte dins d’un workspace, la forma que tenim per indicar quin d’ells és el que està actiu és fent doble clic sobre el nom del projecte. Veureu que el nom queda remarcat en negre i cursiva: a partir d’aquest moment, aquest serà el projecte que compilarem i executarem des de les opcions del menú de CodeLite. Tot i que estiguem visualitzant per pantalla el codi d’un altre projecte, la compilació i execució sempre es farà del projecte actiu. Per mostrar la barra d’eines (icones) a la part superior: CodeLite -&gt; View -&gt; Show toolbar. La icona del play de color verd cap a la dreta de la toolbar és per debuggar, no per compilar. Per compilar i executar podem fer: CodeLite -&gt; Build -&gt; Build and run project. També es pot compilar amb la icona de la toolbar de la fletxa blanca avall amb fons verd, i executar amb la icona de les rodes dentades grises. El resultat de l’execució del programa es mostrarà en una pantalla nova tipus terminal. És important anar tancant aquestes finestres una vegada ja hem comprovat el resultat de l’execució. 13.5 Com activar un projecte Dins de CodeLite, a la part esquerra es mostren tots els projects que s’han creat al workspace. Si ens fixem en el nom de tots ells, veurem que un està remarcat en negreta; per exemple podem tenir: PAC01 PAC02 PAC03 PAC04 Això significa que quan anem a CodeLite –&gt; Build –&gt; Build and Run Project, s’executarà l’acció sobre el project PAC02, tot i que per pantalla s’estigui mostrant el codi d’un altre project. Si es fa doble clic amb el ratolí sobre el nom del project PAC04, ara veurem: PAC01 PAC02 PAC03 PAC04 A partir d’aquest moment, el Build and Run Project s’aplicarà sobre PAC04. 13.6 Canviar idioma del teclat Dins de l’escriptori de Lubuntu, clica amb el botó dret del ratolí sobre la barra grisa superior -&gt; Add/Remove Panel Items -&gt; pestanya Panel Applets -&gt; botó Add -&gt; selecciona el plugin Keyboard Layout Handler -&gt; Add -&gt; Close. En aquests moments a la part superior dreta se’t mostrarà l’idioma definit per defecte pel teclat -&gt; marca sobre la bandera amb el botó dret -&gt; “Keyboard Layout Handler” settings -&gt; desmarca l’opció Keep system layout -&gt; i aquí ja pots afegir l’idioma que vulguis des del botó Add; pots prioritzar un idioma o l’altre posant-lo en primera posició a la llista. Una vegada hagis guardat la configuració desitjada, ja t’haurà canviat la disposició del teclat al nou idioma. Si has deixat definits varis idiomes a la llista, cada vegada que cliquis sobre la bandera de la part superior dreta, et farà un canvi a l’altre idioma de la llista. 13.7 Programa per defecte al crear un projecte Cada vegada que es crea un nou projecte a CodeLite, per defecte sempre conté el codi del programa hello world: #include &lt;stdio.h&gt; int main(int argc, char **argv) { printf(&quot;hello world\\n&quot;); return 0; } Per tant, quan volem crear el nostre propi programa, només cal esborrar el programa que crea per defecte i començar a codificar el teu programa nou. Si malgrat tot no es vol que es mostri aquest codi cada vegada, podem modificar el codi per defecte associat als nous projectes: Editar l’arxiu /usr/share/codelite/templates/projects/executable/main.cpp, que és el que es carrega per defecte en crear cada nou projecte. Crear un nou template de CodeLite i utilitzar-lo en el moment de crear un nou projecte. La creació d’un nou templates es fa a partir d’un projecte que tinguem -&gt; botó dret sobre el nom del projecte -&gt; Save as template.... 13.8 Com fixar el kernel d’inici amb Lubuntu Tot i ser una situació gens habitual, es pot donar el cas que Lubuntu només ens arranqui en un determinat kernel per problemes amb determinades targetes gràfiques. Tot i que el kernel sempre es pot seleccionar en el moment d’inici de Lubuntu, podem fixar quin és el que volem utilitzar malgrat que aquest no sigui el més nou de tots. Una possible opció per fer-ho amb l’aplicació Grub Customizer; per instal·lar-la fem: sudo add-apt-repository ppa:danielrichter2007/grub-customizer Ens identifiquem amb la password de l’usuari uoc. A continuació, actualitzem la llista de packages de tots els repositoris: sudo apt-get update sudo apt-get install grub-customizer En aquest punt haurem instal·lat Grub Customizer dins de la màquina virtual FP20181: aquest programa ens permetrà confirmar exactament què hi ha definit a l’arranc grub de la màquina virtual. Per executar el programa: icona de Lubuntu —&gt; System Tools —&gt; Grub Customizer —&gt; posar contrasenya uoc —&gt; a la pestanya inicial List configuration es mostren tots els kernels de què disposa l’entorn en aquests moments. Es recomanable fer una còpia prèvia de les PAC/PR que puguem tenir dins de la FP20181 abans de canviar el kernel d’inici. Per canviar el kernel d’arranc per defecte: Grub Customizer -&gt; pestanya General Settings -&gt; com a default entry, seleccionar el kernel que funciona correctament d’entre tots els disponibles. Una vegada escollit, es prem el botó Save de la part superior esquerra. Per aplicar el canvi que s’acaba de desar a l’arranc de Lubuntu cal obrir un terminal de Lubuntu des de System Tools -&gt; LXTerminal, i des del terminal teclejar: sudo update-grub Una vegada hagi finalitzat el procés, cal realitzar un reboot de la FP20181 per tal que agafi ara per defecte el kernel escollit. "]
]
